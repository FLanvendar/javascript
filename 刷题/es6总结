1. 字符串的扩展
  unicode表示法（单字符）码点在\u0000~\uFFFF
  模版字符串： （可以识别大于0xFFFF的码点）
  字符串的遍历
  方法：includes startsWith endsWith trimStart trimEnd

2. 数值扩展
  parsrInt，parseFloat都移动到Number里
  isInteger()
  Math.sign()
3. 函数
  参数默认，rest参数
  // 指定默认值后函数的length不统计在内（坑）
  箭头函数 this 词法作用域/
  不可当构造函数/不适用arguments/不能使用yield

4. 数组
  扩展运算符（也能扩展字符串）
  Array.from 顶替了以前 [].slice.call(a)
  includes
5. 对象
  属性名表达式[]
  Object.is() 一是+0不等于-0，二是NaN等于自身。
  Object.assign()
  Object.keys()
  Object.values()
  Object.entries() // 数组形式的键值对
6. Symbol 解决问题，mixin对象时，属性名称冲突
symbol表示独一无二的值 （不可用new）
  let mySymbol = Symbol();

  // 第一种写法
  let a = {};
  a[mySymbol] = 'Hello!';

  // 第二种写法
  let a = {
    [mySymbol]: 'Hello!'
  };

7. Set
set.add(a)
set.delete(a)
set.size

WeakSet 成员只能是对象

Map 相当于扩展了对象的键的取值范围
map.size
map.add({a:b})
map.has(a)
map.get(a)
map.delete(a)
WeakMap 键名只适用对象
